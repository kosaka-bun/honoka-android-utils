name: Gradle CI

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      IS_DEVELOPMENT_VERSION: ${{ steps.gradle_build.outputs.IS_DEVELOPMENT_VERSION }}
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: 'recursive'
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          # 通过预定义的包管理器之一管理的依赖项的快速设置缓存
          # 它可以是maven、gradle或sbt之一
          cache: 'gradle'
      - id: gradle_build
        name: Build with Gradle
        run: |
          chmod +x ./scripts/github/*.sh
          ./scripts/github/build.sh
      - name: Upload the changes of Maven repository as artifact
        uses: actions/upload-artifact@v4
        with:
          # 指定要上传的目录在上传到当前Actions运行实例的Artifacts当中时要使用的名字
          name: maven-repo-changes
          # 要上传的目录路径（以项目根目录为相对路径起始点）
          path: maven-repo-changes
  publish:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: 'recursive'
      - name: Download the changes of Maven repository
        uses: actions/download-artifact@v4
        with:
          # 指定在之前的job当中，上传到Actions运行实例的Artifacts当中的目录所使用的名字
          name: maven-repo-changes
          # 指定要将这一目录下的所有内容（即不包含目录本身）下载到哪个位置（以项目根目录为相对路径起始点）
          path: maven-repo-changes
      - name: Merge the changes into Maven repository and publish
        env:
          REMOTE_MAVEN_REPO_URL: ${{ secrets.REMOTE_MAVEN_REPO_URL }}
          IS_DEVELOPMENT_VERSION: ${{ needs.build.outputs.IS_DEVELOPMENT_VERSION }}
        run: |
          chmod +x ./scripts/github/*.sh
          ./scripts/github/publish.sh

on:
  push:
    branches:
      - dev
    paths-ignore:
      - 'docs/**'
      - '**/.gitignore'
      - 'LICENSE'
      - 'README.md'
  pull_request:
    branches:
      - dev
    paths-ignore:
      - 'docs/**'
      - '**/.gitignore'
      - 'LICENSE'
      - 'README.md'
